[loggers]# 定义logger模块
# [logger_xxxx] logger_模块名称
# level     级别，级别有DEBUG、INFO、WARNING、ERROR、CRITICAL
# handlers  处理类，可以有多个，用逗号分开
# qualname  logger名称，应用程序通过 logging.getLogger获取。对于不能获取的名称，则记录到root模块。
# propagate 是否继承父类的log信息，0:否 1:是
keys=root

[logger_root]
level=DEBUG
handlers=h01,h03

[handlers]# 定义handler
# [handler_xxxx]
# class handler类名
# level 日志级别
# formatter，上面定义的formatter
# args handler初始化函数参数
keys=h01,h02,h03

[handler_h01]
class=StreamHandler
level=DEBUG
formatter=form01
args=(sys.stdout,)

[handler_h02]
class=FileHandler
level=DEBUG
formatter=form01
args=('coder.log', 'a')

[handler_h03]
class=handlers.RotatingFileHandler
level=DEBUG
formatter=form01
args=('coder.log', 'a', 10*1024*1024, 5)

[formatters]# 定义格式化输出
# 日志格式
#--------------------------------------------------
# %(asctime)s       年-月-日 时-分-秒,毫秒 2013-04-26 20:10:43,745
# %(filename)s      文件名，不含目录
# %(pathname)s      目录名，完整路径
# %(funcName)s      函数名
# %(levelname)s     级别名
# %(lineno)d        行号
# %(module)s        模块名
# %(message)s       消息体
# %(name)s          日志模块名
# %(process)d       进程id
# %(processName)s   进程名
# %(thread)d        线程id
# %(threadName)s    线程名
keys=form01

[formatter_form01]
format=%(asctime)s %(filename)s[line:%(lineno)d] %(levelname)s %(message)s
datefmt=%Y-%m-%d %H:%M:%S